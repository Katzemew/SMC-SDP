# -*- coding: utf-8 -*-
"""SDP_asnmt2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kwvKUxdamELAO-gwjOkx0gnX6GdQ81xF
"""

import pandas as pd

data = pd.read_csv("https://raw.githubusercontent.com/Insiya24/datasets/main/WA_Fn-UseC_-HR-Employee-Attrition.csv")

data

data.axes

data.shape

data.columns

data.size

data.values

data.dtypes

data.count()

data.ndim

data.head(15)

data.tail(15)

data_EF = data.groupby(["Age"])[["YearsAtCompany"]]

data_EF.mean()

data_EF.median()

data[data["HourlyRate"]>99]

data.isnull()

data['EmployeeNumber'].mean()

data['EmployeeNumber'].fillna(1026.05177,inplace=True)

data['EmployeeCount'].mean()

data['EmployeeCount'].fillna(1.0,inplace=True)

data['EnvironmentSatisfaction'].mean()

data['EnvironmentSatisfaction'].fillna(2.7229407760381212,inplace=True)

data['HourlyRate'].mean()

data['HourlyRate'].fillna(65.88207225630539,inplace=True)

data['JobInvolvement'].mean()

data['JobInvolvement'].fillna(2.732919254658385,inplace=True)

data['JobLevel'].mean()

data['JobLevel'].fillna(2.0611263736263736,inplace=True)

data['JobSatisfaction'].mean()

data['JobSatisfaction'].fillna(2.726525017135024,inplace=True)

from sklearn import preprocessing
le=preprocessing.LabelEncoder()

data["Gender"]=le.fit_transform(data["Gender"])

data["Gender"].value_counts()

data["Department"]=le.fit_transform(data["Department"])

data['Department'].value_counts()

data["PercentSalaryHike"]=le.fit_transform(data["PercentSalaryHike"])

data['PercentSalaryHike'].value_counts()

data["EducationField"]=le.fit_transform(data["EducationField"])

data['EducationField'].value_counts()

data.isna().sum()

data

data["Attrition"]=le.fit_transform(data["Attrition"])

data['Attrition'].value_counts()

data["OverTime"]=le.fit_transform(data["OverTime"])

data['OverTime'].value_counts()

data.dtypes

data["MaritalStatus"]=le.fit_transform(data["MaritalStatus"])

data['MaritalStatus'].value_counts()



import seaborn
import matplotlib.pyplot as pt
pt.figure(figsize=(20,20))
correlation = data.corr()
heatmap=seaborn.heatmap(correlation,annot=True)

pt.show()

